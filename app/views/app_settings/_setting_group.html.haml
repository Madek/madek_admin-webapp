.panel.panel-default
  .panel-heading
    .panel-title= setting_group
  .panel-body
    %table.table.table-striped
      %tbody
        - settings.each do |attr, description|
          %tr.row{id: attr}
            %td.col-xs-5
              = setting_header(attr)
              %code.column-name= "[#{attr}]"
              %p.help-block= description

            - if attr == :static_pages
              = render 'app_settings/sections/static_pages'
            - else
              %td.col-xs-6.break-word
                - type = AppSetting.columns_hash[attr.try(:to_s)].try(:sql_type)
                - markdowned = ['welcome_texts']
                - text_blocks = ['about_pages']
                - as_listing = ['copyright_notice_templates']
                - is_localized_field = AppSetting.localized_field?(attr)
                - meta_key_ids = ['ignored_keyword_keys_for_browsing']
                - group_ids = ['edit_meta_data_power_users_group_id']
                - case
                - when attr == :static_pages
                  = render 'static_pages_section'
                - when type === 'jsonb'
                  %pre.col-xs-9= @app_settings.public_send(attr).to_yaml
                - when markdowned.include?(attr.to_s)
                  - if is_localized_field
                    %ul.list-unstyled
                      - I18n.available_locales.each do |locale|
                        %li
                          = locale_label locale, '&searr;'
                          = markdown(@app_settings.public_send(attr)[locale.to_s])
                  - else
                    = markdown(@app_settings.public_send(attr))
                - when meta_key_ids.include?(attr.to_s)
                  = meta_key_ids_as_links(@app_settings[:ignored_keyword_keys_for_browsing])
                - when group_ids.include?(attr.to_s)
                  = group_id_as_link(@app_settings[:edit_meta_data_power_users_group_id])
                - when as_listing.include?(attr.to_s)
                  %ul{style: 'padding-left: 19px'}
                    - @app_settings.read_attribute(attr).each do |value|
                      %li= simple_format(value)
                - when text_blocks.include?(attr.to_s)
                  - if is_localized_field
                    %ul.list-unstyled
                      - I18n.available_locales.each do |locale|
                        %li
                          = locale_label locale
                          - if @app_settings.public_send(attr)[locale.to_s].present?
                            %pre= @app_settings.public_send(attr)[locale.to_s].split("\n").first(3).join("\n") + '…'
                          - else
                            %em Not configured
                  - elsif @app_settings.public_send(attr).present?
                    %pre= @app_settings.public_send(attr).split("\n").first(3).join("\n") + '…'
                  - else
                    %em= "Not configured"
                - else
                  - if is_localized_field
                    = render 'localized_setting', attr: attr
                  - else
                    = @app_settings.public_send(attr)

              %td.col-xs-1
                - if attr != :static_pages
                  = link_to edit_app_setting_path(attr), class: 'btn btn-info btn-sm' do
                    %span.glyphicon.glyphicon-edit
                    Edit
