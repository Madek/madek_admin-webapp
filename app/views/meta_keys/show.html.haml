:ruby
  conditional_attributes = {
    is_extensible_list: :can_have_keywords?,
    allowed_people_subtypes: :can_have_people_subtypes?
  }.with_indifferent_access
  used_as = context_links(@meta_key.context_keys.pluck(:context_id))

.page-header
  %h1 Meta Key: #{@meta_key.id}
  %small
    = link_to '&larr; Go back to Meta Keys list'.html_safe, meta_keys_path

.row
  .col-xs-12
    .panel.panel-default
      .panel-body
        .btn-group
          = render partial: 'action_buttons', locals: { meta_key: @meta_key, size: nil }
        .btn-group.pull-right
          = link_to meta_key_move_path(@meta_key), class: "btn btn-default" do
            %i.glyphicon.glyphicon-move
            Move/Rename

.row
  .col-xs-12
    %table.table.table-striped
      %thead
      %tbody
        - @meta_key.attributes.each do |attr|
          - attr_name = attr.first
          - if conditional_attributes.has_key?(attr_name) && !@meta_key.send(conditional_attributes[attr_name])
            - next
          - else
            %tr
              %td.col-xs-5
                %strong= t("activerecord.attributes.meta_key.#{attr_name}", default: attr_name.humanize)
              %td.col-xs-7= attr.last
        %tr.info
          %td.col-xs-5
            %strong This meta key is used in the following contexts:
          %td.col-xs-7= used_as

- if @meta_key.can_have_keywords?

  .page-header
    %h2 Keywords (#{@meta_key.keywords.count})

  .alert.alert-info
    - if @meta_key.keywords_alphabetical_order
      The Keywords are ordered alphabetically. You cannot define their order by yourself.
    - else
      The Keywords are not ordered alphabetically. You can define their order by yourself.

  - if @keyword
    = form_for @keyword, url: keywords_path(redirect_to: meta_key_path(@meta_key)), html: { class: 'form-inline', style: 'margin-bottom: 20px' } do |f|
      = f.hidden_field :meta_key_id
      .form-group
        = f.text_field :term, class: 'form-control', placeholder: 'Term', size: 50
      = f.button type: :submit, class: 'btn btn-primary' do
        %i.glyphicon.glyphicon-plus
        Add Keyword

  .row
    .col-xs-12
      %table.table.table-striped{id: :keywords}
        %thead
          %tr
            %th.col-xs-4 ID
            %th.col-xs-6 Term
            %th.col-xs-2
        %tbody
          - @keywords.each do |keyword|
            %tr
              %td= keyword.id
              %td= keyword
              %td.active.text-center
                .btn-group.btn-group-sm.btn-group-vertical
                  - unless @meta_key.keywords_alphabetical_order
                    = link_to move_up_keyword_path(keyword), method: :patch, class: 'btn btn-warning' do
                      %span.glyphicon.glyphicon-chevron-up
                      Move up
                    = link_to move_down_keyword_path(keyword), method: :patch, class: 'btn btn-warning' do
                      %span.glyphicon.glyphicon-chevron-down
                      Move down
                  = render partial: 'keywords/action_buttons', locals: { keyword: keyword }

  = paginate @keywords
