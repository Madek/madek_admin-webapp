:ruby
  env = @data[:environment].deep_symbolize_keys

  storage_info = begin
    env[:storage][:stats_by_mount].map do |mount, s|
      mountpoint = env[:storage][:mountpoints][s[:path].to_sym].first
      options = mountpoint[:options]
      {
        mount: mount,
        name: mountpoint[:name],
        type: mountpoint[:mount_type],
        options: options,
        read_only: options.split(',').map(&:strip).include?('ro'),
        size: s[:blocks].to_i * s[:block_size],
        available: s[:blocks_available].to_i * s[:block_size],
        available_pct: (s[:blocks_available].to_f / s[:blocks].to_f * 100).to_i,
        used: (s[:blocks].to_i - s[:blocks_free]) * s[:block_size],
        used_pct: ((s[:blocks].to_i - s[:blocks_free])/ s[:blocks].to_f * 100).to_i,
        stores_on_mount: env[:storage][:mounts_by_path]
          .select { |k, v| v == s[:path] }.keys
          .map {|p| [p, env[:storage][:stores].select{|k,v| v == p.to_s}.keys]}.to_h
      }
    end
  rescue => e
    Rails.logger.warn 'Dashboard sysinfo fs error: ' + e.to_s
    nil
  end

- disks_list = capture_haml do
  - storage_info.try(:each) do |s|
    .h5
      Disk
      %b
        .label.label-default{style: 'background-color: #111'}= s[:mount]
        .label.label-default= s[:name]
        .label.label-default= s[:type].upcase

      - if s[:read_only]
        .label.label-danger= 'READ-ONLY!'

    %b
      = number_to_human_size s[:size]
    = "| available #{number_to_human_size s[:available]} (#{s[:available_pct]}%)"
    = "| used #{number_to_human_size s[:used]} (#{s[:used_pct]}%)"
    %ul
    - s[:stores_on_mount].each do |k, v|
      %li
        = "#{v.join(', ')} |"
        %code= k
    %hr
  %span
    (see
    %a{:href => app_settings_path + '#' + 'deploy-config'} Deploy-Config)


:ruby
  info_table_data = begin
    !env.present? ? nil : {
      App: env[:madek].compact,
      Storage: {
        '': disks_list ? disks_list : 'No Data available!'
      },
      Environment: {
        ruby: env[:ruby].values.join(' '),
        rails: env[:rails],
        postgres: env[:postgres].try(:[], :version),
      },
      Server: {
        hostname: "#{env[:system].try(:[], :host).try(:[], :fqdn)}",
        os: env[:system].try(:[], :os).try(:values).try(:join, ' '),
      }
    }
  rescue => e
    Rails.logger.warn 'Dashboard sysinfo error: ' + e.to_s
    nil
  end

-# main:

- if info_table_data
  = data_table(info_table_data, class: 'code-table')
- else
  No Data available!

#allDataContent.collapse{"aria-labelledby" => "showAllData", :role => "tabpanel"}
  %pre= JSON.pretty_generate(@data[:environment] || {})

.row
  .btn-group.btn-group-xs
    %a{"aria-controls" => "showAllData", "aria-expanded" => "false", "data-parent" => "#dataAccordion", "data-toggle" => "collapse",
      :href => "#allDataContent", :role => "button",
      class: 'btn btn-xs btn-link'}
      Show All Data

    = button_to "Refresh", dashboard_refresh_path, class: 'btn btn-xs btn-link'
